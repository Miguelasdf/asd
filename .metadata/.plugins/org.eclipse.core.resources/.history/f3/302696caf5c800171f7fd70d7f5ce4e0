import localporttd.*
import pedidos.*
import centros.*
import camisetas.*
import materiales.*
import clientes.*
import proveedores.*
describe "testeo del practico" {
	var  l2
    var l1
	var c1
	var c2
	var  pedi
	var l3
	var l4
	var camiseta
	var tortuga
	var camiseta2
	var pedio
	var l5
	fixture {
		camiseta = new Camiseta('doblea', poliester, 'negro', 2, 3, sacachispas, 1500,2)
		camiseta2 = new Camiseta('doblea', poliester, 'negro', 2, 3, sacachispas, 1500,300)
		c2= new CentroArea(10,2)
		 c1= new CentroArea(1,2)
		 l2= new LocalMayorista(c1)
		 l3=new LocalMayorista(null)
		 tortuga=new Estampador("hola")
    l1= new LocalMinorista(l2,c1,100,1)
    l4=new LocalMinorista(l1,c2,1,1)
      l4=new LocalMinorista(l1,c2,0,1)
	pedi=new Pedido([camiseta], [tortuga],  new Date(25,12,2017))
	pedio=new Pedido([camiseta], [tortuga],  new Date(25,12,2017))
	}
	

test "locar minorista puede recibir pedido" {
 
  
    l1.recibirPedido(pedi)
	assert.equals(1,l1.cantidadPedido() )

}
test "locar mayorista puede recibir pedido de sus locales" {
  

    l1.mandarPedido(pedi)
	assert.equals(1,l2.cantidadPedido() )

}
test "  minorista   mandar un pedido a un centro" {
   l1.hacePedido(pedi)

  
assert.equals(1,c1.retornoPedidoss() )

}


test "  minorista   cambia de centro" {
   l1.cambiarCentro(c2)

  
assert.equals(c2,l1.mostrarCentro() )

}
test "  mayorista  mandar un pedido a un centro" {
   l2.hacePedido(pedi)

  
assert.equals(1,c1.retornoPedidoss() )

}

test "    mandar un pedido al centro del  local que tenga el costo mas barato para ese pedido. " {
   l3.agrgarLocales(l1)
   l3.agrgarLocales(l4)
   l3.hacePedido(pedi)

  
assert.equals(1,c1.retornoPedidoss() )

}


test "    que aumentan mis fondos y mis ganancias con las centas en los locales minoristas. " {

   l1.ganacias(pedi)
assert.equals(2,l1.ventas() )
assert.equals(102,l1.fonndoss())
}



test "    que aumentan los gastos y diminulleng la gantidad de fondos por el costo del peido " {

   l1.gastos(pedi)
assert.equals(1,l1.gastos() )
assert.equals(99,l1.fonndoss())
}


test "  Los fondos de un local mayorista es la sumatoria total de ventas y gastos de todos sus locales. 
  " {
   l4.gastos(pedi)
   l1.gastos(pedi)
   l1.ganacias(pedi)
   l4.ganacias(pedi)
   l3.agrgarLocales(l1)
   l3.agrgarLocales(l4)
assert.equals(11,l3.fondos())

}test "    si un minorista atiende un pedido con los fondeo necesarios " {

  
   assert.that(  l1.puedoAtenderPedido(pedi))
  

} test "    si un minorista no ateindo un pedido por falta de fondos " {

  
   assert.notThat(  l4.puedoAtenderPedido(pedio))
  

} 
}