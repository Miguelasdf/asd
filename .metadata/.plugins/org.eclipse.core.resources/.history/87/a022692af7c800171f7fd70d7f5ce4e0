import localporttd.*
import pedidos.*
import centros.*
import camisetas.*
import materiales.*
import clientes.*
import proveedores.*
class LocalMinorista {
	var pedidos=[]
	var localM
	var centro
	var fondos
	const margen
	var gastos
	var ventas
	constructor(local,cent,fondo,mar){
		localM=local
		centro=cent
		fondos=fondo
		margen=mar
	}
 method recibirPedido(pedio){
 	
 	pedidos.add(pedio)
 }
  method cantidadPedido(){
  return pedidos.size()
}
method puedoAtenderPedido(pedido){
	return fondos>=self.costoPedido(pedido)
	
	
}


method hacePedido(pedido)
{ 
	
self.puedoAtenderPedido(pedido)
	centro.recibirPedido(pedido)
	self.ganacias(pedido)
	 self.gastos(pedido)
}
method costoPedido(pedido){
	
	return centro.costoPedido(pedido)
	
}
method fonndoss(){
	
	return fondos
}

method ventas(){
	
	return ventas
}method gastos(){
 return gastos}
	
method gastos(pedido){
	gastos=+centro.costoPedido(pedido)
	fondos= fondos-centro.costoPedido(pedido)
	
}
method ganacias(pedido){
	ventas= +centro.costoPedido(pedido)+(centro.costoPedido(pedido)*margen)
	fondos=fondos+centro.costoPedido(pedido)+(centro.costoPedido(pedido)*margen)
}
 method mandarPedido(pedidp){
 
 //	self.perdidas(pedidp)
 	localM.recibirPedido(pedidp)
 	
 	
 }
 method cambiarCentro(_centro){
 centro=_centro
 }
 method mostrarCentro(){
 return centro
}
}
class LocalMayorista  {
	var fondos
	var pedidos=[]
	var centro=null
	var locales =[]
	var variableAuxiliar
	constructor(cent){
	
		centro=cent
	}
	method darleCentro(_centro){
 centro=_centro
 }
 method agrgarLocales(local){
 	
 	locales.add(local)
 }
 method recibirPedido(pedidp){
 	
 	pedidos.add(pedidp)
 }
  method cantidadPedido(){
  return pedidos.size()
}
method tengoCento(){
	return (centro!=null)
	
}

method hacePedido(pedido)

{   if(self.tengoCento())
	centro.recibirPedido(pedido)
else self.sinCentro(pedido)
//locales.min({local=>local.costoPedido(pedido)}).hacePedido(pedido)
	
	
}

method sinCentro(pedido){
	
return	locales.min({local=>local.costoPedido(pedido)}).hacePedido(pedido)
	
}

method hacePedido2(pedido){
	
	
	return locales.min({local=>local.costoPedido(pedido)})//.hacePedido(pedido)
	
	
}
method fondos(){
	
	return locales.sum({local=>local.ventas() })-locales.sum({local=>local.gastos() })
	
}
method puedoAtenderPedido(pedido){
	return self.fondos()>=self.costoPedido(pedido)
	
	
}
method costoPedido(pedido){
	  if (centro!=null)
	return centro.costoPedido(pedido)
	return self.sinCentro(pedido)
}
}