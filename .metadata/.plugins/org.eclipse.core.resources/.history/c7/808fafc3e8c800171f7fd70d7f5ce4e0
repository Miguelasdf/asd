import materiales.*
import clientes.*
import proveedores.*
import centros.*
import camisetas.*
import locales.*

class Pedido {
	var fechaDeEntrega
	var camiseta
	var proveedores = []
	var cantidad
	var movimientos = []

	constructor(_camiseta, _proveedor, _cantidad, _fechaDeEntrega) {
		camiseta = _camiseta 
		cantidad = _cantidad 
		proveedores.addAll(_proveedor)
		fechaDeEntrega = _fechaDeEntrega
	}

	method fechaDeEntrega() {
		return fechaDeEntrega
	}

	method costoCamiseta() {
		return camiseta.calcularCosto()
	}

	method costoInicial(){
		return camiseta.costoInicial()
	}	
	
	method esRoja(){
		return camiseta.esRoja()
	}
				
	method cantidad() {
		return cantidad
	}

	method camiseta() {
		return camiseta
	}

	method procesar(_proveedor, _trabajo, _tipoDeTrabajo, _pedido) {		
		movimientos.add(new Movimiento(_proveedor,cantidad,new Date(), self))
		_proveedor.trabajarCamiseta(camiseta, _trabajo, _tipoDeTrabajo, _pedido)
	}

	method estaListo() {
		return proveedores.all {proveedor => movimientos.any{movimiento => movimiento.getProveedor() == proveedor}}
	}
	
	method estaAtrasado() {
		return movimientos.any({movimiento => movimiento.atraso()})
	}
	
	method verificacionDePedidos(){
		return movimientos.all({ movi => proveedores.contains(movi.getProveedor() )})
	}
}

class Movimiento {
	var proveedor
	var cantidad
	var	date 
	var fechaself
	
	constructor (_proveedor, _cantidad, _date, _fechaself){	
		proveedor = _proveedor
		cantidad = _cantidad
		date = new Date()
		fechaself = _fechaself
	}

	method mostrarFecha(){
		return date	
	}	
	
	method getProveedor(){
		return proveedor
	}
	
	method atraso(){
		return self.mostrarFecha() > fechaself.fechaDeEntrega()
	}
}